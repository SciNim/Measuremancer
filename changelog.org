* v0.2.9
- add ~-d:mmErrPrec~ compile time option to adjust the precision with
  which values are printed (PR #20)
- add ~+/~ binary operator, which computes the weighted mean between
  two measurement values (PR #20)
- add ~mean~ procedure taking multiple measurements or an ~openArray~
  of values and return the weighted mean of all of them (PR #20)
- support ~ln~ for ~Measurement~ (was an oversight it was missing)  
* v0.2.8
- add equality of Measurements with "different" types (if aliases)
- improve concept definition, add ~to~ for numbers
- fix ~^~, ~**~ involving a ~UnitLess~ and regular ~float~, due to the
  ~distinct~ nature of the former relative to the latter
- force Nim 1.6 Measurement type to require ~FloatLike~
- fix division involving integer literals
- add some more ~unchained~ related tests
* v0.2.7
- fix import of ~measuremancer~ in ~tCligenParsing~ to use local path
* v0.2.6
- add ~merge~ argument to ~pretty~ to allow merging the uncertainty
  ~B~ with the value ~A~ as ~A(B)~ when using ~cligen~ for printing
* v0.2.5
- move ~toFloat~ definitions above ~==~ (where they are used, PR #13
  by @metagn)
- replace erroneously used ~bind~ by ~mixin~  
* v0.2.4
- add ~-d:useCligen~ CT option to allow using ~cligen/fmtUncertain~
  for the uncertainty formatting (PR #12)
- add ~+-~ helper as a non-unicode version of ~Â±~ (PR #12)
- export ~val~, ~uncer~ fields of ~Measurement~
* v0.2.3
- fix regression that disabled ability to use division of int literals
  with a ~Measurement~
* v0.2.2
- export ~to~ procedure (used to convert inner type of a
  ~Measurement~)
- fix ~**~, ~^~ for two Measurements
- allow to disable printing of unicode symbols for string repr of
  ~Measurement~ by compiling with ~-d:noUnicode~
- fix issue #6 to allow ~measurement~ procedure to construct correct
  type for given types other than ~float~
- fix division of a literal with a measurement
- fix power math operation for different argument types, including
  fixing issue #7
  - adds a new private submodule for a helper macro to generate
    `power` calls for static integers (including negative)
* v0.2.1
- change import path in test file to relative import
* v0.2.0
- add basic tests for arithmetic
- add all trigonometric functions supported by =std/math=
- add CI
- add docs      
* v0.1.1
- fix division operation of measurements of units like =unchained= units
* v0.1.0
- initial working version of the library. Supports basic math of
  measurements and some trigonometric functions.
